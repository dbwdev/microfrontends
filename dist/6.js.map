{"version":3,"sources":["webpack:///./src/svelte/src/app.svelte","webpack:///./src/svelte/src/main.js"],"names":["description","key","id","filter","t","done","send","receive","duration","d","Math","sqrt","node","params","style","getComputedStyle","transform","easing","css","uid","todos","add","input","todo","value","remove","mark","concat","e","target","svelteLifecycles","singleSpaSvelte","component","myRootSvelteComponent","domElementGetter","document","getElementById","props","someData","bootstrap","mount","unmount"],"mappings":"iaA0EI,EAAI,IAACA,YAAW,G,upBAAhB,EAAI,IAACA,YAAW,uB,gEAJHC,IAAK,EAAI,IAACC,M,gEACZD,IAAK,EAAI,IAACC,K,+GAkBrB,EAAI,IAACF,YAAW,G,2qBAAhB,EAAI,IAACA,YAAW,uB,gEAJHC,IAAK,EAAI,IAACC,M,gEACZD,IAAK,EAAI,IAACC,K,iJAlBZ,EAAK,GAACC,OAAO,G,WAAuB,EAAI,IAACD,G,gBAA9C,OAAI,M,iDAcC,EAAK,GAACC,OAAO,G,WAAsB,EAAI,IAACD,G,gBAA7C,OAAI,M,0xCAdC,EAAK,GAACC,OAAO,G,yFAcb,EAAK,GAACA,OAAO,G,sGAdlB,OAAI,K,kCAcJ,OAAI,K,wRAdcC,IAAMA,EAAEC,K,EAcRD,GAAKA,EAAEC,K,wBA9ExBC,EAAMC,GAAW,YAAU,CAChCC,SAAUC,GAAKC,KAAKC,KAAS,IAAJF,GAEzB,SAASG,EAAMC,G,MACPC,EAAQC,iBAAiBH,GACzBI,EAAgC,SAApBF,EAAME,UAAuB,GAAKF,EAAME,U,OAG/DR,SAAU,IACVS,OAAQ,IACRC,IAAKd,GAAK,0BACOY,WAAmBZ,2BACrBA,kB,IAMVe,EAAM,EAENC,EAAQ,C,CACRlB,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,mB,CACrCE,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,2B,CACrCE,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,iB,CACrCE,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,gB,CACrCE,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,mB,CACrCE,GAAIiB,IAAOd,MAAM,EAAOL,YAAa,kB,SAGhCqB,EAAIC,G,MACLC,EAAO,CACXrB,GAAIiB,IACJd,MAAM,EACNL,YAAasB,EAAME,O,IAGrBJ,EAAQ,CAACG,KAASH,IAClBE,EAAME,MAAQ,G,SAGPC,EAAOF,G,IACdH,EAAQA,EAAMjB,OAAOC,GAAKA,IAAMmB,I,SAGzBG,EAAKH,EAAMlB,GAClBkB,EAAKlB,KAAOA,EACZoB,EAAOF,G,IACPH,EAAQA,EAAMO,OAAOJ,I,qBAYTK,GAAe,UAAVA,EAAE3B,KAAmBoB,EAAIO,EAAEC,Q,GAUPH,EAAKH,GAAM,G,GAExBE,EAAOF,G,GAacG,EAAKH,GAAM,G,GAEhCE,EAAOF,I,u3DC9EnC,MAAMO,EAAmBC,IAAgB,CACvCC,UAAWC,EACXC,iBAAkB,IAAMC,SAASC,eAAe,UAChDC,MAAO,CAAEC,SAAU,UAGRC,EAAYT,EAAiBS,UAC7BC,EAAQV,EAAiBU,MACzBC,EAAUX,EAAiBW","file":"6.js","sourcesContent":["<script>\n  import { quintOut } from 'svelte/easing';\n  import { crossfade } from 'svelte/transition';\n\n  const [send, receive] = crossfade({\n    duration: d => Math.sqrt(d * 200),\n\n    fallback(node, params) {\n      const style = getComputedStyle(node);\n      const transform = style.transform === 'none' ? '' : style.transform;\n\n      return {\n\tduration: 600,\n\teasing: quintOut,\n\tcss: t => `\n\t\t\t\t\ttransform: ${transform} scale(${t});\n\t\t\t\t\topacity: ${t}\n\t\t\t\t`\n      };\n    }\n  });\n\n  let uid = 1;\n\n  let todos = [\n    { id: uid++, done: false, description: 'write some docs' },\n    { id: uid++, done: false, description: 'start writing blog post' },\n    { id: uid++, done: true,  description: 'buy some milk' },\n    { id: uid++, done: false, description: 'mow the lawn' },\n    { id: uid++, done: false, description: 'feed the turtle' },\n    { id: uid++, done: false, description: 'fix some bugs' },\n  ];\n\n  function add(input) {\n    const todo = {\n      id: uid++,\n      done: false,\n      description: input.value\n    };\n\n    todos = [todo, ...todos];\n    input.value = '';\n  }\n\n  function remove(todo) {\n    todos = todos.filter(t => t !== todo);\n  }\n\n  function mark(todo, done) {\n    todo.done = done;\n    remove(todo);\n    todos = todos.concat(todo);\n  }\n</script>\n\n<main>\n  <h1>Hello from Svelte!</h1>\n  <p>Visit the <a href=\"https://svelte.dev/tutorial\">Svelte tutorial</a> to learn how to build Svelte apps.</p>\n</main>\n\n<div class='board'>\n  <input\n    placeholder=\"what needs to be done?\"\n    on:keydown={e => e.key === 'Enter' && add(e.target)}\n    >\n\n    <div class='left'>\n      <h2>todo</h2>\n      {#each todos.filter(t => !t.done) as todo (todo.id)}\n\t<label\n   in:receive=\"{{key: todo.id}}\"\n   out:send=\"{{key: todo.id}}\"\n   >\n   <input type=checkbox on:change={() => mark(todo, true)}>\n\t  {todo.description}\n\t  <button on:click=\"{() => remove(todo)}\">remove</button>\n\t</label>\n      {/each}\n    </div>\n\n    <div class='right'>\n      <h2>done</h2>\n      {#each todos.filter(t => t.done) as todo (todo.id)}\n\t<label\n   class=\"done\"\n   in:receive=\"{{key: todo.id}}\"\n   out:send=\"{{key: todo.id}}\"\n   >\n   <input type=checkbox checked on:change={() => mark(todo, false)}>\n\t  {todo.description}\n\t  <button on:click=\"{() => remove(todo)}\">remove</button>\n\t</label>\n      {/each}\n    </div>\n</div>\n\n<style>\n  main {\n    text-align: center;\n    padding: 1em;\n    max-width: 240px;\n    margin: 0 auto;\n  }\n\n  h1 {\n    color: #ff3e00;\n    text-transform: uppercase;\n    font-size: 4em;\n    font-weight: 100;\n  }\n\n  @media (min-width: 640px) {\n    main {\n      max-width: none;\n    }\n  }\n  .board {\n    display: grid;\n    grid-gap: 1em;\n    margin: 0 auto;\n  }\n\n  .board > input {\n    font-size: 1.4em;\n    grid-column: 1/3;\n  }\n\n  div.left, div.right {\n    display: grid;\n  }\n\n  h2 {\n    font-size: 2em;\n    font-weight: 200;\n    user-select: none;\n    margin: 0 0 0.5em 0;\n  }\n\n  label {\n    position: relative;\n    line-height: 1.2;\n    padding: 0.5em 2.5em 0.5em 2em;\n    margin: 0 0 0.5em 0;\n    border-radius: 2px;\n    user-select: none;\n    border: 1px solid hsl(240, 8%, 70%);\n    background-color:hsl(240, 8%, 93%);\n    color: #333;\n  }\n\n  input[type=\"checkbox\"] {\n    position: absolute;\n    left: 0.5em;\n    top: 0.6em;\n    margin: 0;\n  }\n\n  .done {\n    border: 1px solid hsl(240, 8%, 90%);\n    background-color:hsl(240, 8%, 98%);\n  }\n\n  button {\n    position: absolute;\n    top: 0;\n    right: 0.2em;\n    width: 2em;\n    height: 100%;\n    background: no-repeat 50% 50% url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23676778' d='M12,2C17.53,2 22,6.47 22,12C22,17.53 17.53,22 12,22C6.47,22 2,17.53 2,12C2,6.47 6.47,2 12,2M17,7H14.5L13.5,6H10.5L9.5,7H7V9H17V7M9,18H15A1,1 0 0,0 16,17V10H8V17A1,1 0 0,0 9,18Z'%3E%3C/path%3E%3C/svg%3E\");\n    background-size: 1.4em 1.4em;\n    border: none;\n    opacity: 0;\n    transition: opacity 0.2s;\n    text-indent: -9999px;\n    cursor: pointer;\n  }\n\n  label:hover button {\n    opacity: 1;\n  }\n</style>\n","// const app = new App({\n// \ttarget: document.body,\n// \tprops: {\n// \t\tname: 'world'\n// \t}\n// });\n\n// export default app;\n\nimport singleSpaSvelte from 'single-spa-svelte';\nimport myRootSvelteComponent from './app.svelte';\n\nconst svelteLifecycles = singleSpaSvelte({\n  component: myRootSvelteComponent,\n  domElementGetter: () => document.getElementById('svelte'),\n  props: { someData: 'data' }\n});\n\nexport const bootstrap = svelteLifecycles.bootstrap;\nexport const mount = svelteLifecycles.mount;\nexport const unmount = svelteLifecycles.unmount;\n"],"sourceRoot":""}